/*******************************************************************************
 * Size: 24 px
 * Bpp: 4
 * Opts: --bpp 4 --size 24 --no-compress --font BebasNeuePro-Regular.ttf --symbols 1234567890-+=!$()[]:;,.?" _*%@#№ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮйцукенгшщзхъфывапролджэячсмитьбю --format lvgl -o lv_font_bebas_24.c
 ******************************************************************************/

#ifdef LV_LVGL_H_INCLUDE_SIMPLE
#include "lvgl.h"
#else
#include "lvgl/lvgl.h"
#endif

#ifndef LV_FONT_BEBAS_24
#define LV_FONT_BEBAS_24 1
#endif

#if LV_FONT_BEBAS_24

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap_24[] = {
    /* U+0020 " " */

    /* U+0021 "!" */
    0x9f, 0x59, 0xf5, 0x9f, 0x59, 0xf5, 0x9f, 0x59,
    0xf5, 0x9f, 0x58, 0xf4, 0x8f, 0x47, 0xf3, 0x6f,
    0x25, 0xf2, 0x14, 0x3, 0x51, 0x9f, 0x59, 0xf5,

    /* U+0022 "\"" */
    0xee, 0xf, 0xdd, 0xc0, 0xdc, 0xbb, 0xb, 0xaa,
    0x90, 0xa9, 0x66, 0x6, 0x60,

    /* U+0023 "#" */
    0x0, 0xf, 0x60, 0x4f, 0x20, 0x0, 0x1f, 0x50,
    0x5f, 0x0, 0x0, 0x3f, 0x30, 0x7e, 0x0, 0x0,
    0x4f, 0x20, 0x9d, 0x0, 0xc, 0xff, 0xff, 0xff,
    0xf0, 0x2, 0x9e, 0x33, 0xdb, 0x30, 0x0, 0x9c,
    0x0, 0xe8, 0x0, 0x0, 0xbb, 0x0, 0xf6, 0x0,
    0x0, 0xd9, 0x1, 0xf4, 0x0, 0x0, 0xe7, 0x3,
    0xf3, 0x0, 0x6f, 0xff, 0xff, 0xff, 0x60, 0x15,
    0xf6, 0x38, 0xf3, 0x10, 0x4, 0xf2, 0x8, 0xe0,
    0x0, 0x5, 0xf0, 0xa, 0xc0, 0x0, 0x7, 0xf0,
    0xc, 0xa0, 0x0, 0x9, 0xd0, 0xd, 0x80, 0x0,

    /* U+0024 "$" */
    0x0, 0xe, 0x90, 0x0, 0x1, 0x6f, 0xd5, 0x0,
    0x1d, 0xff, 0xff, 0xa0, 0x9f, 0x91, 0x1c, 0xf3,
    0xdf, 0x0, 0x5, 0xf7, 0xdf, 0x0, 0x2, 0xb5,
    0xbf, 0x60, 0x0, 0x0, 0x3f, 0xf3, 0x0, 0x0,
    0x7, 0xff, 0x50, 0x0, 0x0, 0x6f, 0xf8, 0x0,
    0x0, 0x4, 0xef, 0x70, 0x0, 0x0, 0x3f, 0xf1,
    0x65, 0x0, 0x8, 0xf7, 0xfd, 0x0, 0x5, 0xf8,
    0xde, 0x0, 0x6, 0xf7, 0x9f, 0xa4, 0x5e, 0xf2,
    0x1c, 0xff, 0xff, 0x70, 0x0, 0x3f, 0xb1, 0x0,
    0x0, 0xf, 0x90, 0x0,

    /* U+0025 "%" */
    0x6, 0xef, 0x90, 0x0, 0xc, 0x80, 0x0, 0x2f,
    0x63, 0xe6, 0x0, 0x2f, 0x20, 0x0, 0x4f, 0x0,
    0xb9, 0x0, 0x9b, 0x0, 0x0, 0x5f, 0x0, 0xb9,
    0x0, 0xf4, 0x0, 0x0, 0x5f, 0x0, 0xb9, 0x6,
    0xe0, 0x0, 0x0, 0x5f, 0x0, 0xb9, 0xc, 0x70,
    0x0, 0x0, 0x5f, 0x0, 0xb9, 0x3f, 0x10, 0x0,
    0x0, 0x2f, 0x31, 0xd7, 0x9a, 0x2c, 0xec, 0x30,
    0x9, 0xff, 0xc2, 0xf4, 0xbb, 0x3a, 0xd0, 0x0,
    0x1, 0x6, 0xd0, 0xe5, 0x4, 0xf0, 0x0, 0x0,
    0xd, 0x70, 0xf5, 0x4, 0xf0, 0x0, 0x0, 0x4f,
    0x10, 0xf5, 0x4, 0xf0, 0x0, 0x0, 0xaa, 0x0,
    0xf5, 0x4, 0xf0, 0x0, 0x1, 0xf3, 0x0, 0xe5,
    0x4, 0xf0, 0x0, 0x7, 0xd0, 0x0, 0xb8, 0x7,
    0xd0, 0x0, 0xe, 0x60, 0x0, 0x2c, 0xec, 0x30,

    /* U+0028 "(" */
    0x6, 0xdf, 0x83, 0xfd, 0x73, 0x7f, 0x40, 0x9,
    0xf2, 0x0, 0x9f, 0x20, 0x9, 0xf2, 0x0, 0x9f,
    0x20, 0x9, 0xf2, 0x0, 0x9f, 0x20, 0x9, 0xf2,
    0x0, 0x9f, 0x20, 0x9, 0xf2, 0x0, 0x9f, 0x20,
    0x9, 0xf2, 0x0, 0x9f, 0x20, 0x8, 0xf3, 0x0,
    0x5f, 0xb2, 0x0, 0xaf, 0xf8, 0x0, 0x14, 0x20,

    /* U+0029 ")" */
    0x2f, 0xe9, 0x1, 0x6b, 0xf9, 0x0, 0xe, 0xd0,
    0x0, 0xde, 0x0, 0xd, 0xe0, 0x0, 0xde, 0x0,
    0xd, 0xe0, 0x0, 0xde, 0x0, 0xd, 0xe0, 0x0,
    0xde, 0x0, 0xd, 0xe0, 0x0, 0xde, 0x0, 0xd,
    0xe0, 0x0, 0xde, 0x0, 0xd, 0xe0, 0x0, 0xed,
    0x2, 0x6f, 0xa2, 0xff, 0xe2, 0x4, 0x30, 0x0,

    /* U+002A "*" */
    0x0, 0x0, 0xd9, 0x0, 0x0, 0x0, 0x0, 0xc8,
    0x0, 0x0, 0x19, 0x20, 0xa6, 0x4, 0x80, 0x3d,
    0xfc, 0xcb, 0xdf, 0xd1, 0x0, 0x16, 0xfe, 0x40,
    0x0, 0x0, 0xc, 0x8c, 0x90, 0x0, 0x0, 0xae,
    0x3, 0xf7, 0x0, 0x0, 0xa5, 0x0, 0x88, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+002B "+" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe, 0x80,
    0x0, 0x0, 0x0, 0xe8, 0x0, 0x0, 0x11, 0x1e,
    0x91, 0x11, 0x4f, 0xff, 0xff, 0xff, 0xe1, 0x44,
    0x4f, 0xa4, 0x44, 0x0, 0x0, 0xe8, 0x0, 0x0,
    0x0, 0xe, 0x80, 0x0, 0x0, 0x0, 0xe8, 0x0,
    0x0,

    /* U+002C "," */
    0x45, 0xc, 0xf2, 0xcf, 0x23, 0xd0, 0x96, 0x6,
    0x0,

    /* U+002D "-" */
    0x28, 0x88, 0x85, 0x4f, 0xff, 0xfa,

    /* U+002E "." */
    0x45, 0xc, 0xf2, 0xcf, 0x20,

    /* U+0030 "0" */
    0x0, 0x5c, 0xfe, 0xa2, 0x0, 0x5f, 0xfb, 0xcf,
    0xe1, 0xd, 0xf2, 0x0, 0x8f, 0x70, 0xfd, 0x0,
    0x3, 0xf9, 0xf, 0xd0, 0x0, 0x3f, 0xa0, 0xfd,
    0x0, 0x3, 0xfa, 0xf, 0xd0, 0x0, 0x3f, 0xa0,
    0xfd, 0x0, 0x3, 0xfa, 0xf, 0xd0, 0x0, 0x3f,
    0xa0, 0xfd, 0x0, 0x3, 0xfa, 0xf, 0xd0, 0x0,
    0x3f, 0xa0, 0xfd, 0x0, 0x3, 0xfa, 0xf, 0xd0,
    0x0, 0x3f, 0x90, 0xdf, 0x20, 0x8, 0xf7, 0x5,
    0xff, 0xbc, 0xfe, 0x0, 0x5, 0xcf, 0xea, 0x20,

    /* U+0031 "1" */
    0x0, 0x4, 0xf5, 0x2, 0x6e, 0xf5, 0x6f, 0xfe,
    0xf5, 0x13, 0x8, 0xf5, 0x0, 0x8, 0xf5, 0x0,
    0x8, 0xf5, 0x0, 0x8, 0xf5, 0x0, 0x8, 0xf5,
    0x0, 0x8, 0xf5, 0x0, 0x8, 0xf5, 0x0, 0x8,
    0xf5, 0x0, 0x8, 0xf5, 0x0, 0x8, 0xf5, 0x0,
    0x8, 0xf5, 0x0, 0x8, 0xf5, 0x0, 0x8, 0xf5,

    /* U+0032 "2" */
    0x0, 0x8e, 0xfe, 0x80, 0x0, 0x9f, 0xdb, 0xef,
    0x90, 0x1f, 0xc0, 0x1, 0xef, 0x13, 0xf8, 0x0,
    0xa, 0xf3, 0x4f, 0x70, 0x0, 0xaf, 0x30, 0x31,
    0x0, 0xe, 0xf0, 0x0, 0x0, 0x7, 0xf8, 0x0,
    0x0, 0x4, 0xfd, 0x0, 0x0, 0x3, 0xfe, 0x20,
    0x0, 0x2, 0xee, 0x20, 0x0, 0x0, 0xef, 0x30,
    0x0, 0x0, 0x9f, 0x50, 0x0, 0x0, 0xf, 0xd0,
    0x0, 0x0, 0x2, 0xf9, 0x0, 0x0, 0x0, 0x4f,
    0xda, 0xaa, 0xaa, 0x4, 0xff, 0xff, 0xff, 0xf1,

    /* U+0033 "3" */
    0x1, 0x9d, 0xfd, 0x80, 0x0, 0xbf, 0xdb, 0xef,
    0x90, 0x1f, 0xc0, 0x0, 0xef, 0x4, 0xf8, 0x0,
    0xb, 0xf2, 0x15, 0x20, 0x0, 0xbf, 0x20, 0x0,
    0x0, 0x1e, 0xe0, 0x0, 0x8, 0xbe, 0xe4, 0x0,
    0x0, 0xcf, 0xfc, 0x20, 0x0, 0x0, 0x6, 0xfc,
    0x0, 0x0, 0x0, 0xc, 0xf2, 0x14, 0x10, 0x0,
    0xaf, 0x35, 0xf6, 0x0, 0xa, 0xf3, 0x4f, 0x70,
    0x0, 0xbf, 0x22, 0xfc, 0x0, 0x1f, 0xf0, 0xa,
    0xfd, 0xbe, 0xf8, 0x0, 0x9, 0xef, 0xe8, 0x0,

    /* U+0034 "4" */
    0x0, 0x0, 0x8, 0xfc, 0x0, 0x0, 0x0, 0x1f,
    0xfc, 0x0, 0x0, 0x0, 0x8f, 0xfc, 0x0, 0x0,
    0x0, 0xec, 0xfc, 0x0, 0x0, 0x7, 0xf5, 0xfc,
    0x0, 0x0, 0xe, 0xc1, 0xfc, 0x0, 0x0, 0x6f,
    0x51, 0xfc, 0x0, 0x0, 0xdd, 0x1, 0xfc, 0x0,
    0x5, 0xf6, 0x1, 0xfc, 0x0, 0xd, 0xe0, 0x1,
    0xfc, 0x0, 0x5f, 0x70, 0x1, 0xfc, 0x0, 0x8f,
    0xff, 0xff, 0xff, 0xf2, 0x5a, 0xaa, 0xab, 0xfe,
    0xa1, 0x0, 0x0, 0x1, 0xfc, 0x0, 0x0, 0x0,
    0x1, 0xfc, 0x0, 0x0, 0x0, 0x1, 0xfc, 0x0,

    /* U+0035 "5" */
    0xb, 0xff, 0xff, 0xff, 0x0, 0xbf, 0xaa, 0xaa,
    0xa0, 0xc, 0xf0, 0x0, 0x0, 0x0, 0xde, 0x0,
    0x0, 0x0, 0xe, 0xd0, 0x0, 0x0, 0x0, 0xfc,
    0x7e, 0xfc, 0x30, 0xf, 0xfe, 0xbd, 0xfe, 0x1,
    0xfe, 0x10, 0xc, 0xf4, 0x18, 0x50, 0x0, 0x8f,
    0x60, 0x0, 0x0, 0x7, 0xf6, 0x0, 0x0, 0x0,
    0x7f, 0x63, 0xf9, 0x0, 0x7, 0xf6, 0x2f, 0x90,
    0x0, 0x8f, 0x50, 0xfd, 0x0, 0xc, 0xf2, 0x8,
    0xfe, 0xbd, 0xfb, 0x0, 0x8, 0xef, 0xe9, 0x10,

    /* U+0036 "6" */
    0x0, 0x6c, 0xfe, 0xb2, 0x0, 0x6f, 0xfb, 0xcf,
    0xe1, 0xd, 0xf2, 0x0, 0x7f, 0x60, 0xfd, 0x0,
    0x2, 0xc7, 0x1f, 0xd0, 0x0, 0x0, 0x1, 0xfd,
    0x17, 0xa8, 0x10, 0x1f, 0xdd, 0xff, 0xfe, 0x1,
    0xff, 0x91, 0x2c, 0xf6, 0x1f, 0xf0, 0x0, 0x5f,
    0x91, 0xfd, 0x0, 0x3, 0xfa, 0x1f, 0xd0, 0x0,
    0x3f, 0xa1, 0xfd, 0x0, 0x3, 0xfa, 0xf, 0xd0,
    0x0, 0x4f, 0x80, 0xdf, 0x30, 0x9, 0xf6, 0x6,
    0xff, 0xbc, 0xfd, 0x0, 0x5, 0xcf, 0xea, 0x20,

    /* U+0037 "7" */
    0x9f, 0xff, 0xff, 0xff, 0x16, 0xaa, 0xaa, 0xaf,
    0xf1, 0x0, 0x0, 0x1, 0xfc, 0x0, 0x0, 0x0,
    0x5f, 0x70, 0x0, 0x0, 0xb, 0xf2, 0x0, 0x0,
    0x0, 0xfd, 0x0, 0x0, 0x0, 0x5f, 0x80, 0x0,
    0x0, 0xa, 0xf3, 0x0, 0x0, 0x0, 0xfe, 0x0,
    0x0, 0x0, 0x5f, 0x90, 0x0, 0x0, 0xa, 0xf3,
    0x0, 0x0, 0x0, 0xfe, 0x0, 0x0, 0x0, 0x5f,
    0x90, 0x0, 0x0, 0xa, 0xf4, 0x0, 0x0, 0x0,
    0xff, 0x0, 0x0, 0x0, 0x4f, 0xa0, 0x0, 0x0,

    /* U+0038 "8" */
    0x0, 0x7d, 0xfe, 0xb2, 0x0, 0x8f, 0xeb, 0xcf,
    0xe1, 0xf, 0xf1, 0x0, 0x8f, 0x71, 0xfc, 0x0,
    0x4, 0xf9, 0x1f, 0xc0, 0x0, 0x4f, 0x90, 0xdf,
    0x10, 0x8, 0xf6, 0x3, 0xee, 0xbc, 0xfa, 0x0,
    0x2c, 0xff, 0xff, 0x70, 0xc, 0xf6, 0x2, 0xcf,
    0x41, 0xfc, 0x0, 0x4, 0xfa, 0x3f, 0xa0, 0x0,
    0x2f, 0xb3, 0xfa, 0x0, 0x2, 0xfb, 0x2f, 0xb0,
    0x0, 0x3f, 0xb0, 0xff, 0x20, 0x9, 0xf8, 0x8,
    0xff, 0xbc, 0xfe, 0x10, 0x7, 0xdf, 0xfb, 0x20,

    /* U+0039 "9" */
    0x0, 0x7d, 0xfd, 0x91, 0x0, 0x9f, 0xeb, 0xdf,
    0xc0, 0xf, 0xe0, 0x0, 0xbf, 0x43, 0xfa, 0x0,
    0x6, 0xf6, 0x3f, 0xa0, 0x0, 0x6f, 0x73, 0xfa,
    0x0, 0x6, 0xf7, 0x3f, 0xb0, 0x0, 0x8f, 0x71,
    0xff, 0x40, 0x3e, 0xf7, 0x9, 0xff, 0xff, 0xaf,
    0x70, 0x6, 0x99, 0x36, 0xf7, 0x0, 0x0, 0x0,
    0x6f, 0x70, 0x53, 0x0, 0x6, 0xf7, 0x1f, 0xa0,
    0x0, 0x7f, 0x60, 0xee, 0x10, 0xc, 0xf4, 0x7,
    0xfe, 0xbd, 0xfc, 0x0, 0x7, 0xdf, 0xd9, 0x10,

    /* U+003A ":" */
    0xcf, 0x2c, 0xf2, 0x46, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x50, 0xcf,
    0x2c, 0xf2,

    /* U+003B ";" */
    0xcf, 0x2c, 0xf2, 0x46, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x50, 0xcf,
    0x2c, 0xf2, 0x3d, 0x9, 0x60, 0x60, 0x0,

    /* U+003D "=" */
    0x1, 0x11, 0x11, 0x11, 0x10, 0xff, 0xff, 0xff,
    0xfa, 0x4, 0x44, 0x44, 0x44, 0x30, 0x0, 0x0,
    0x0, 0x0, 0x1, 0x11, 0x11, 0x11, 0x10, 0xff,
    0xff, 0xff, 0xfa, 0x4, 0x44, 0x44, 0x44, 0x30,

    /* U+003F "?" */
    0x1, 0x9e, 0xfd, 0x60, 0x0, 0xbf, 0xdb, 0xef,
    0x70, 0x3f, 0xb0, 0x2, 0xfe, 0x5, 0xf6, 0x0,
    0xd, 0xf0, 0x6f, 0x60, 0x0, 0xdf, 0x1, 0x31,
    0x0, 0x3f, 0xc0, 0x0, 0x0, 0xb, 0xf4, 0x0,
    0x0, 0x6, 0xf9, 0x0, 0x0, 0x1, 0xfd, 0x0,
    0x0, 0x0, 0x8f, 0x30, 0x0, 0x0, 0xc, 0xd0,
    0x0, 0x0, 0x0, 0xdb, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x55, 0x0, 0x0, 0x0,
    0xf, 0xe0, 0x0, 0x0, 0x0, 0xfe, 0x0, 0x0,

    /* U+0040 "@" */
    0x0, 0x0, 0x5, 0xad, 0xff, 0xda, 0x40, 0x0,
    0x0, 0x1, 0xcf, 0xe9, 0x77, 0x9e, 0xfb, 0x10,
    0x0, 0x1d, 0xf6, 0x0, 0x0, 0x0, 0x6f, 0xc0,
    0x0, 0xaf, 0x50, 0x0, 0x0, 0x0, 0x6, 0xf5,
    0x3, 0xf9, 0x0, 0x7e, 0xfa, 0x9f, 0x20, 0xda,
    0x9, 0xf2, 0x3, 0xfb, 0x4a, 0xff, 0x0, 0x9d,
    0xd, 0xd0, 0x8, 0xf2, 0x0, 0xff, 0x0, 0x8e,
    0xf, 0x90, 0xb, 0xf0, 0x0, 0xdd, 0x0, 0x8e,
    0x2f, 0x80, 0xc, 0xe0, 0x0, 0xfb, 0x0, 0xad,
    0x3f, 0x70, 0xe, 0xc0, 0x1, 0xf9, 0x0, 0xda,
    0x2f, 0x70, 0xf, 0xb0, 0x4, 0xf8, 0x3, 0xf5,
    0x1f, 0x90, 0xf, 0xe1, 0x2c, 0xfa, 0x1c, 0xd0,
    0xd, 0xd0, 0x9, 0xff, 0xf8, 0xdf, 0xff, 0x30,
    0x7, 0xf6, 0x0, 0x57, 0x40, 0x17, 0x71, 0x0,
    0x0, 0xcf, 0x60, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x1c, 0xfc, 0x73, 0x22, 0x47, 0xd1, 0x0,
    0x0, 0x0, 0x6c, 0xff, 0xff, 0xfe, 0x80, 0x0,
    0x0, 0x0, 0x0, 0x13, 0x44, 0x20, 0x0, 0x0,

    /* U+005B "[" */
    0x7f, 0xff, 0x87, 0xf9, 0x63, 0x7f, 0x40, 0x7,
    0xf4, 0x0, 0x7f, 0x40, 0x7, 0xf4, 0x0, 0x7f,
    0x40, 0x7, 0xf4, 0x0, 0x7f, 0x40, 0x7, 0xf4,
    0x0, 0x7f, 0x40, 0x7, 0xf4, 0x0, 0x7f, 0x40,
    0x7, 0xf4, 0x0, 0x7f, 0x40, 0x7, 0xf4, 0x0,
    0x7f, 0x51, 0x7, 0xff, 0xf8, 0x24, 0x44, 0x20,

    /* U+005D "]" */
    0x3f, 0xff, 0xd1, 0x66, 0xfd, 0x0, 0xe, 0xd0,
    0x0, 0xed, 0x0, 0xe, 0xd0, 0x0, 0xed, 0x0,
    0xe, 0xd0, 0x0, 0xed, 0x0, 0xe, 0xd0, 0x0,
    0xed, 0x0, 0xe, 0xd0, 0x0, 0xed, 0x0, 0xe,
    0xd0, 0x0, 0xed, 0x0, 0xe, 0xd0, 0x0, 0xed,
    0x1, 0x1e, 0xd3, 0xff, 0xfd, 0x4, 0x44, 0x30,

    /* U+005F "_" */
    0xff, 0xff, 0xff, 0xf3, 0x33, 0x33, 0x33, 0x30,

    /* U+0410 "А" */
    0x0, 0x9, 0xff, 0x20, 0x0, 0x0, 0xc, 0xff,
    0x50, 0x0, 0x0, 0xf, 0xbf, 0x80, 0x0, 0x0,
    0x2f, 0x6f, 0xb0, 0x0, 0x0, 0x5f, 0x3c, 0xe0,
    0x0, 0x0, 0x8f, 0x9, 0xf2, 0x0, 0x0, 0xbd,
    0x6, 0xf5, 0x0, 0x0, 0xeb, 0x4, 0xf8, 0x0,
    0x2, 0xf8, 0x1, 0xfb, 0x0, 0x5, 0xf5, 0x0,
    0xee, 0x0, 0x8, 0xf2, 0x0, 0xbf, 0x10, 0xb,
    0xff, 0xff, 0xff, 0x40, 0xe, 0xe9, 0x99, 0xbf,
    0x70, 0x1f, 0x90, 0x0, 0x2f, 0xb0, 0x4f, 0x60,
    0x0, 0xf, 0xe0, 0x7f, 0x30, 0x0, 0xc, 0xf1,

    /* U+0411 "Б" */
    0xdf, 0xff, 0xff, 0xd0, 0xdf, 0xaa, 0xaa, 0x80,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0xaa, 0x96, 0x0, 0xdf, 0xff, 0xff, 0xd0,
    0xdf, 0x0, 0x19, 0xf7, 0xdf, 0x0, 0x2, 0xfb,
    0xdf, 0x0, 0x1, 0xfc, 0xdf, 0x0, 0x1, 0xfd,
    0xdf, 0x0, 0x1, 0xfb, 0xdf, 0x0, 0x5, 0xf9,
    0xdf, 0xaa, 0xbf, 0xf2, 0xdf, 0xff, 0xec, 0x30,

    /* U+0412 "В" */
    0xdf, 0xff, 0xfc, 0x50, 0xdf, 0xaa, 0xcf, 0xf3,
    0xdf, 0x0, 0x7, 0xf8, 0xdf, 0x0, 0x3, 0xfa,
    0xdf, 0x0, 0x3, 0xfa, 0xdf, 0x0, 0x8, 0xf6,
    0xdf, 0xaa, 0xcf, 0xa0, 0xdf, 0xff, 0xff, 0x90,
    0xdf, 0x0, 0x1a, 0xf7, 0xdf, 0x0, 0x1, 0xfd,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xef,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x4, 0xfb,
    0xdf, 0xaa, 0xbf, 0xf4, 0xdf, 0xff, 0xfc, 0x50,

    /* U+0413 "Г" */
    0xdf, 0xff, 0xff, 0x9d, 0xfa, 0xaa, 0xa6, 0xdf,
    0x0, 0x0, 0xd, 0xf0, 0x0, 0x0, 0xdf, 0x0,
    0x0, 0xd, 0xf0, 0x0, 0x0, 0xdf, 0x0, 0x0,
    0xd, 0xf0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0xd,
    0xf0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0xd, 0xf0,
    0x0, 0x0, 0xdf, 0x0, 0x0, 0xd, 0xf0, 0x0,
    0x0, 0xdf, 0x0, 0x0, 0xd, 0xf0, 0x0, 0x0,

    /* U+0414 "Д" */
    0x0, 0x2f, 0xff, 0xff, 0xfb, 0x0, 0x3, 0xfd,
    0xaa, 0xbf, 0xb0, 0x0, 0x3f, 0x90, 0x2, 0xfb,
    0x0, 0x4, 0xf8, 0x0, 0x2f, 0xb0, 0x0, 0x5f,
    0x80, 0x2, 0xfb, 0x0, 0x5, 0xf7, 0x0, 0x2f,
    0xb0, 0x0, 0x6f, 0x70, 0x2, 0xfb, 0x0, 0x7,
    0xf6, 0x0, 0x2f, 0xb0, 0x0, 0x7f, 0x60, 0x2,
    0xfb, 0x0, 0x8, 0xf5, 0x0, 0x2f, 0xb0, 0x0,
    0x9f, 0x50, 0x2, 0xfb, 0x0, 0x9, 0xf4, 0x0,
    0x2f, 0xb0, 0x0, 0xaf, 0x30, 0x2, 0xfb, 0x0,
    0xd, 0xe0, 0x0, 0x2f, 0xb0, 0x6b, 0xfe, 0xaa,
    0xab, 0xfe, 0x99, 0xff, 0xff, 0xff, 0xff, 0xfe,
    0x9f, 0x40, 0x0, 0x0, 0xf, 0xe9, 0xf4, 0x0,
    0x0, 0x0, 0xfe, 0x13, 0x0, 0x0, 0x0, 0x3,
    0x20,

    /* U+0415 "Е" */
    0xdf, 0xff, 0xff, 0xf0, 0xdf, 0xaa, 0xaa, 0xa0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0xaa, 0xaa, 0x10, 0xdf, 0xff, 0xff, 0x10,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0xaa, 0xaa, 0xa0, 0xdf, 0xff, 0xff, 0xf0,

    /* U+0416 "Ж" */
    0x4f, 0xa0, 0x0, 0x9f, 0x40, 0x0, 0xef, 0x10,
    0xbf, 0x30, 0x9, 0xf4, 0x0, 0x7f, 0x70, 0x2,
    0xfb, 0x0, 0x9f, 0x40, 0xe, 0xd0, 0x0, 0x9,
    0xf3, 0x9, 0xf4, 0x8, 0xf5, 0x0, 0x0, 0x1f,
    0xc0, 0x9f, 0x41, 0xfc, 0x0, 0x0, 0x0, 0x7f,
    0x49, 0xf4, 0x8f, 0x30, 0x0, 0x0, 0x7, 0xfc,
    0x9f, 0x6f, 0xf3, 0x0, 0x0, 0x0, 0xdf, 0xfe,
    0xfe, 0xff, 0x80, 0x0, 0x0, 0x2f, 0xa9, 0xff,
    0xf5, 0xee, 0x0, 0x0, 0x7, 0xf5, 0x1e, 0xfc,
    0xa, 0xf3, 0x0, 0x0, 0xcf, 0x10, 0x9f, 0x50,
    0x5f, 0x80, 0x0, 0x2f, 0xb0, 0x9, 0xf4, 0x0,
    0xfd, 0x0, 0x7, 0xf6, 0x0, 0x9f, 0x40, 0xa,
    0xf3, 0x0, 0xcf, 0x10, 0x9, 0xf4, 0x0, 0x5f,
    0x80, 0x1f, 0xc0, 0x0, 0x9f, 0x40, 0x0, 0xfd,
    0x7, 0xf7, 0x0, 0x9, 0xf4, 0x0, 0xb, 0xf3,

    /* U+0417 "З" */
    0x1, 0x9d, 0xfd, 0x80, 0x0, 0xbf, 0xdb, 0xef,
    0x90, 0x1f, 0xc0, 0x0, 0xef, 0x4, 0xf8, 0x0,
    0xb, 0xf2, 0x15, 0x20, 0x0, 0xbf, 0x20, 0x0,
    0x0, 0x1e, 0xe0, 0x0, 0x8, 0xbe, 0xe4, 0x0,
    0x0, 0xcf, 0xfc, 0x20, 0x0, 0x0, 0x6, 0xfc,
    0x0, 0x0, 0x0, 0xc, 0xf2, 0x14, 0x10, 0x0,
    0xaf, 0x35, 0xf6, 0x0, 0xa, 0xf3, 0x4f, 0x70,
    0x0, 0xbf, 0x22, 0xfc, 0x0, 0x1f, 0xf0, 0xa,
    0xfd, 0xbe, 0xf8, 0x0, 0x9, 0xef, 0xe8, 0x0,

    /* U+0418 "И" */
    0xdd, 0x0, 0x1, 0xff, 0xd, 0xd0, 0x0, 0x6f,
    0xf0, 0xdd, 0x0, 0xc, 0xff, 0xd, 0xd0, 0x2,
    0xff, 0xf0, 0xdd, 0x0, 0x7f, 0xcf, 0xd, 0xd0,
    0xd, 0xca, 0xf0, 0xdd, 0x3, 0xf7, 0xaf, 0xd,
    0xd0, 0x8f, 0x1a, 0xf0, 0xdd, 0xe, 0xb0, 0xaf,
    0xd, 0xd4, 0xf6, 0xa, 0xf0, 0xdd, 0xaf, 0x0,
    0xaf, 0xd, 0xef, 0xa0, 0xa, 0xf0, 0xdf, 0xf5,
    0x0, 0xaf, 0xd, 0xff, 0x0, 0xa, 0xf0, 0xdf,
    0x90, 0x0, 0xaf, 0xd, 0xf4, 0x0, 0xa, 0xf0,

    /* U+0419 "Й" */
    0x3, 0x60, 0x4, 0x40, 0x0, 0x3f, 0x32, 0xd6,
    0x0, 0x0, 0xaf, 0xfc, 0x0, 0x0, 0x0, 0x12,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd, 0xd0,
    0x0, 0x1f, 0xf0, 0xdd, 0x0, 0x6, 0xff, 0xd,
    0xd0, 0x0, 0xcf, 0xf0, 0xdd, 0x0, 0x2f, 0xff,
    0xd, 0xd0, 0x7, 0xfc, 0xf0, 0xdd, 0x0, 0xdc,
    0xaf, 0xd, 0xd0, 0x3f, 0x7a, 0xf0, 0xdd, 0x8,
    0xf1, 0xaf, 0xd, 0xd0, 0xeb, 0xa, 0xf0, 0xdd,
    0x4f, 0x60, 0xaf, 0xd, 0xda, 0xf0, 0xa, 0xf0,
    0xde, 0xfa, 0x0, 0xaf, 0xd, 0xff, 0x50, 0xa,
    0xf0, 0xdf, 0xf0, 0x0, 0xaf, 0xd, 0xf9, 0x0,
    0xa, 0xf0, 0xdf, 0x40, 0x0, 0xaf, 0x0,

    /* U+041A "К" */
    0xdf, 0x0, 0x0, 0xdf, 0x1d, 0xf0, 0x0, 0x6f,
    0x70, 0xdf, 0x0, 0xe, 0xe0, 0xd, 0xf0, 0x8,
    0xf5, 0x0, 0xdf, 0x1, 0xfc, 0x0, 0xd, 0xf0,
    0xaf, 0x20, 0x0, 0xdf, 0x3f, 0xf1, 0x0, 0xd,
    0xfc, 0xff, 0x60, 0x0, 0xdf, 0xf9, 0xfc, 0x0,
    0xd, 0xfc, 0xd, 0xf1, 0x0, 0xdf, 0x20, 0x8f,
    0x70, 0xd, 0xf0, 0x2, 0xfd, 0x0, 0xdf, 0x0,
    0xc, 0xf2, 0xd, 0xf0, 0x0, 0x7f, 0x80, 0xdf,
    0x0, 0x1, 0xfd, 0xd, 0xf0, 0x0, 0xb, 0xf3,

    /* U+041B "Л" */
    0x0, 0x1f, 0xff, 0xff, 0xfc, 0x0, 0x2f, 0xea,
    0xab, 0xfc, 0x0, 0x2f, 0xa0, 0x1, 0xfc, 0x0,
    0x3f, 0xa0, 0x1, 0xfc, 0x0, 0x3f, 0x90, 0x1,
    0xfc, 0x0, 0x4f, 0x90, 0x1, 0xfc, 0x0, 0x5f,
    0x80, 0x1, 0xfc, 0x0, 0x5f, 0x80, 0x1, 0xfc,
    0x0, 0x6f, 0x70, 0x1, 0xfc, 0x0, 0x6f, 0x60,
    0x1, 0xfc, 0x0, 0x7f, 0x60, 0x1, 0xfc, 0x0,
    0x8f, 0x50, 0x1, 0xfc, 0x0, 0x9f, 0x40, 0x1,
    0xfc, 0x0, 0xcf, 0x20, 0x1, 0xfc, 0x6c, 0xfd,
    0x0, 0x1, 0xfc, 0x9e, 0xb2, 0x0, 0x1, 0xfc,

    /* U+041C "М" */
    0xdf, 0xf0, 0x0, 0x5, 0xff, 0x8d, 0xff, 0x20,
    0x0, 0x8f, 0xf8, 0xdf, 0xf5, 0x0, 0xb, 0xff,
    0x8d, 0xdf, 0x80, 0x0, 0xed, 0xf8, 0xdd, 0xdb,
    0x0, 0x1f, 0xaf, 0x8d, 0xd9, 0xe0, 0x4, 0xf6,
    0xf8, 0xdd, 0x6f, 0x10, 0x7f, 0x4f, 0x8d, 0xd3,
    0xf5, 0xa, 0xc4, 0xf8, 0xdd, 0xf, 0x80, 0xd8,
    0x4f, 0x8d, 0xd0, 0xdb, 0xf, 0x54, 0xf8, 0xdd,
    0xa, 0xe3, 0xf2, 0x4f, 0x8d, 0xd0, 0x6f, 0x8f,
    0x4, 0xf8, 0xdd, 0x3, 0xfe, 0xc0, 0x4f, 0x8d,
    0xd0, 0xf, 0xf8, 0x4, 0xf8, 0xdd, 0x0, 0xdf,
    0x50, 0x4f, 0x8d, 0xd0, 0xa, 0xf2, 0x4, 0xf8,

    /* U+041D "Н" */
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0xaa, 0xaa, 0xfe, 0xdf, 0xff, 0xff, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,

    /* U+041E "О" */
    0x0, 0x5c, 0xfe, 0xa2, 0x0, 0x5f, 0xfb, 0xcf,
    0xe1, 0xd, 0xf2, 0x0, 0x8f, 0x70, 0xfd, 0x0,
    0x3, 0xf9, 0xf, 0xd0, 0x0, 0x3f, 0xa0, 0xfd,
    0x0, 0x3, 0xfa, 0xf, 0xd0, 0x0, 0x3f, 0xa0,
    0xfd, 0x0, 0x3, 0xfa, 0xf, 0xd0, 0x0, 0x3f,
    0xa0, 0xfd, 0x0, 0x3, 0xfa, 0xf, 0xd0, 0x0,
    0x3f, 0xa0, 0xfd, 0x0, 0x3, 0xfa, 0xf, 0xd0,
    0x0, 0x3f, 0x90, 0xdf, 0x20, 0x8, 0xf7, 0x5,
    0xff, 0xbc, 0xfe, 0x0, 0x5, 0xcf, 0xea, 0x20,

    /* U+041F "П" */
    0xdf, 0xff, 0xff, 0xfe, 0xdf, 0xaa, 0xaa, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,
    0xdf, 0x0, 0x0, 0xfe, 0xdf, 0x0, 0x0, 0xfe,

    /* U+0420 "Р" */
    0xdf, 0xff, 0xeb, 0x20, 0xdf, 0xaa, 0xcf, 0xe1,
    0xdf, 0x0, 0x8, 0xf6, 0xdf, 0x0, 0x4, 0xf8,
    0xdf, 0x0, 0x4, 0xf9, 0xdf, 0x0, 0x4, 0xf8,
    0xdf, 0x0, 0x8, 0xf6, 0xdf, 0xaa, 0xcf, 0xe1,
    0xdf, 0xff, 0xeb, 0x20, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,

    /* U+0421 "С" */
    0x0, 0x5c, 0xfe, 0x91, 0x0, 0x6f, 0xfb, 0xdf,
    0xc0, 0xd, 0xf2, 0x0, 0xaf, 0x40, 0xfd, 0x0,
    0x5, 0xf6, 0xf, 0xd0, 0x0, 0x5f, 0x70, 0xfd,
    0x0, 0x1, 0x52, 0xf, 0xd0, 0x0, 0x0, 0x0,
    0xfd, 0x0, 0x0, 0x0, 0xf, 0xd0, 0x0, 0x0,
    0x0, 0xfd, 0x0, 0x0, 0x0, 0xf, 0xd0, 0x0,
    0x4c, 0x50, 0xfd, 0x0, 0x5, 0xf7, 0xf, 0xd0,
    0x0, 0x5f, 0x60, 0xdf, 0x20, 0xa, 0xf4, 0x6,
    0xff, 0xbd, 0xfc, 0x0, 0x6, 0xdf, 0xe9, 0x10,

    /* U+0422 "Т" */
    0x9f, 0xff, 0xff, 0xff, 0x36, 0xaa, 0xdf, 0xba,
    0xa2, 0x0, 0x9, 0xf4, 0x0, 0x0, 0x0, 0x9f,
    0x40, 0x0, 0x0, 0x9, 0xf4, 0x0, 0x0, 0x0,
    0x9f, 0x40, 0x0, 0x0, 0x9, 0xf4, 0x0, 0x0,
    0x0, 0x9f, 0x40, 0x0, 0x0, 0x9, 0xf4, 0x0,
    0x0, 0x0, 0x9f, 0x40, 0x0, 0x0, 0x9, 0xf4,
    0x0, 0x0, 0x0, 0x9f, 0x40, 0x0, 0x0, 0x9,
    0xf4, 0x0, 0x0, 0x0, 0x9f, 0x40, 0x0, 0x0,
    0x9, 0xf4, 0x0, 0x0, 0x0, 0x9f, 0x40, 0x0,

    /* U+0423 "У" */
    0x6f, 0x80, 0x0, 0xd, 0xe0, 0x1f, 0xc0, 0x0,
    0x1f, 0xa0, 0xc, 0xf1, 0x0, 0x5f, 0x60, 0x8,
    0xf5, 0x0, 0x9f, 0x10, 0x3, 0xf9, 0x0, 0xdd,
    0x0, 0x0, 0xed, 0x1, 0xf9, 0x0, 0x0, 0xaf,
    0x24, 0xf5, 0x0, 0x0, 0x5f, 0x68, 0xf1, 0x0,
    0x0, 0x1f, 0xac, 0xd0, 0x0, 0x0, 0xc, 0xef,
    0x80, 0x0, 0x0, 0x7, 0xff, 0x40, 0x0, 0x0,
    0x3, 0xff, 0x0, 0x0, 0x0, 0x1, 0xfc, 0x0,
    0x0, 0x0, 0x7, 0xf8, 0x0, 0x0, 0xc, 0xbf,
    0xf2, 0x0, 0x0, 0xd, 0xfd, 0x40, 0x0, 0x0,

    /* U+0424 "Ф" */
    0x0, 0x0, 0x5, 0xf8, 0x0, 0x0, 0x0, 0x2,
    0x8a, 0xcf, 0xda, 0x83, 0x0, 0x4, 0xff, 0xff,
    0xff, 0xff, 0xf7, 0x0, 0xef, 0x61, 0x5f, 0x80,
    0x5f, 0xf1, 0x2f, 0xc0, 0x5, 0xf8, 0x0, 0x9f,
    0x54, 0xf9, 0x0, 0x5f, 0x80, 0x7, 0xf7, 0x4f,
    0x90, 0x5, 0xf8, 0x0, 0x6f, 0x74, 0xf9, 0x0,
    0x5f, 0x80, 0x6, 0xf7, 0x4f, 0x90, 0x5, 0xf8,
    0x0, 0x6f, 0x74, 0xf9, 0x0, 0x5f, 0x80, 0x6,
    0xf7, 0x3f, 0xa0, 0x5, 0xf8, 0x0, 0x8f, 0x60,
    0xff, 0x20, 0x5f, 0x80, 0x1d, 0xf2, 0x8, 0xff,
    0xbc, 0xfd, 0xbe, 0xfa, 0x0, 0x6, 0xdf, 0xff,
    0xff, 0xd8, 0x0, 0x0, 0x0, 0x5, 0xf8, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x5f, 0x80, 0x0, 0x0,

    /* U+0425 "Х" */
    0x4f, 0xb0, 0x0, 0xe, 0xd0, 0xd, 0xf1, 0x0,
    0x5f, 0x70, 0x7, 0xf7, 0x0, 0xbf, 0x10, 0x1,
    0xfe, 0x2, 0xfa, 0x0, 0x0, 0xaf, 0x48, 0xf4,
    0x0, 0x0, 0x3f, 0xbe, 0xd0, 0x0, 0x0, 0xd,
    0xff, 0x70, 0x0, 0x0, 0x7, 0xff, 0x10, 0x0,
    0x0, 0x9, 0xff, 0x20, 0x0, 0x0, 0xf, 0xff,
    0x90, 0x0, 0x0, 0x6f, 0x6e, 0xf0, 0x0, 0x0,
    0xce, 0x8, 0xf6, 0x0, 0x3, 0xf9, 0x2, 0xfc,
    0x0, 0x9, 0xf2, 0x0, 0xcf, 0x30, 0xf, 0xc0,
    0x0, 0x6f, 0x90, 0x6f, 0x60, 0x0, 0xf, 0xf0,

    /* U+0426 "Ц" */
    0xdf, 0x0, 0x0, 0xfe, 0x0, 0xdf, 0x0, 0x0,
    0xfe, 0x0, 0xdf, 0x0, 0x0, 0xfe, 0x0, 0xdf,
    0x0, 0x0, 0xfe, 0x0, 0xdf, 0x0, 0x0, 0xfe,
    0x0, 0xdf, 0x0, 0x0, 0xfe, 0x0, 0xdf, 0x0,
    0x0, 0xfe, 0x0, 0xdf, 0x0, 0x0, 0xfe, 0x0,
    0xdf, 0x0, 0x0, 0xfe, 0x0, 0xdf, 0x0, 0x0,
    0xfe, 0x0, 0xdf, 0x0, 0x0, 0xfe, 0x0, 0xdf,
    0x0, 0x0, 0xfe, 0x0, 0xdf, 0x0, 0x0, 0xfe,
    0x0, 0xdf, 0x0, 0x0, 0xfe, 0x0, 0xdf, 0xaa,
    0xaa, 0xff, 0xa3, 0xdf, 0xff, 0xff, 0xff, 0xf4,
    0x0, 0x0, 0x0, 0x9, 0xf4, 0x0, 0x0, 0x0,
    0x9, 0xf4, 0x0, 0x0, 0x0, 0x1, 0x30,

    /* U+0427 "Ч" */
    0x4f, 0x90, 0x0, 0x4f, 0x94, 0xf9, 0x0, 0x4,
    0xf9, 0x4f, 0x90, 0x0, 0x4f, 0x94, 0xf9, 0x0,
    0x4, 0xf9, 0x4f, 0x90, 0x0, 0x4f, 0x94, 0xf9,
    0x0, 0x4, 0xf9, 0x3f, 0xa0, 0x0, 0x6f, 0x92,
    0xfd, 0x0, 0xc, 0xf9, 0xd, 0xfe, 0xbe, 0xff,
    0x90, 0x2b, 0xef, 0xa6, 0xf9, 0x0, 0x0, 0x0,
    0x4f, 0x90, 0x0, 0x0, 0x4, 0xf9, 0x0, 0x0,
    0x0, 0x4f, 0x90, 0x0, 0x0, 0x4, 0xf9, 0x0,
    0x0, 0x0, 0x4f, 0x90, 0x0, 0x0, 0x4, 0xf9,

    /* U+0428 "Ш" */
    0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef, 0xdf, 0x0,
    0xe, 0xf0, 0x0, 0xef, 0xdf, 0x0, 0xe, 0xf0,
    0x0, 0xef, 0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef,
    0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef, 0xdf, 0x0,
    0xe, 0xf0, 0x0, 0xef, 0xdf, 0x0, 0xe, 0xf0,
    0x0, 0xef, 0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef,
    0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef, 0xdf, 0x0,
    0xe, 0xf0, 0x0, 0xef, 0xdf, 0x0, 0xe, 0xf0,
    0x0, 0xef, 0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef,
    0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef, 0xdf, 0x0,
    0xe, 0xf0, 0x0, 0xef, 0xdf, 0xaa, 0xaf, 0xfa,
    0xaa, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff,

    /* U+0429 "Щ" */
    0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef, 0x0, 0xdf,
    0x0, 0xe, 0xf0, 0x0, 0xef, 0x0, 0xdf, 0x0,
    0xe, 0xf0, 0x0, 0xef, 0x0, 0xdf, 0x0, 0xe,
    0xf0, 0x0, 0xef, 0x0, 0xdf, 0x0, 0xe, 0xf0,
    0x0, 0xef, 0x0, 0xdf, 0x0, 0xe, 0xf0, 0x0,
    0xef, 0x0, 0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef,
    0x0, 0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef, 0x0,
    0xdf, 0x0, 0xe, 0xf0, 0x0, 0xef, 0x0, 0xdf,
    0x0, 0xe, 0xf0, 0x0, 0xef, 0x0, 0xdf, 0x0,
    0xe, 0xf0, 0x0, 0xef, 0x0, 0xdf, 0x0, 0xe,
    0xf0, 0x0, 0xef, 0x0, 0xdf, 0x0, 0xe, 0xf0,
    0x0, 0xef, 0x0, 0xdf, 0x0, 0xe, 0xf0, 0x0,
    0xef, 0x0, 0xdf, 0xaa, 0xaf, 0xfa, 0xaa, 0xff,
    0xa3, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf6,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0xf6, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x8, 0xf6, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x1, 0x31,

    /* U+042A "Ъ" */
    0x9f, 0xff, 0x60, 0x0, 0x0, 0x6a, 0xdf, 0x60,
    0x0, 0x0, 0x0, 0x8f, 0x60, 0x0, 0x0, 0x0,
    0x8f, 0x60, 0x0, 0x0, 0x0, 0x8f, 0x60, 0x0,
    0x0, 0x0, 0x8f, 0x60, 0x0, 0x0, 0x0, 0x8f,
    0xff, 0xfc, 0x50, 0x0, 0x8f, 0xca, 0xbf, 0xf4,
    0x0, 0x8f, 0x60, 0x3, 0xfb, 0x0, 0x8f, 0x60,
    0x0, 0xfe, 0x0, 0x8f, 0x60, 0x0, 0xef, 0x0,
    0x8f, 0x60, 0x0, 0xef, 0x0, 0x8f, 0x60, 0x0,
    0xfe, 0x0, 0x8f, 0x60, 0x3, 0xfb, 0x0, 0x8f,
    0xca, 0xbf, 0xf4, 0x0, 0x8f, 0xff, 0xfc, 0x50,

    /* U+042B "Ы" */
    0xdf, 0x0, 0x0, 0x0, 0xa, 0xf3, 0xdf, 0x0,
    0x0, 0x0, 0xa, 0xf3, 0xdf, 0x0, 0x0, 0x0,
    0xa, 0xf3, 0xdf, 0x0, 0x0, 0x0, 0xa, 0xf3,
    0xdf, 0x0, 0x0, 0x0, 0xa, 0xf3, 0xdf, 0x0,
    0x0, 0x0, 0xa, 0xf3, 0xdf, 0xff, 0xea, 0x20,
    0xa, 0xf3, 0xdf, 0xaa, 0xcf, 0xe0, 0xa, 0xf3,
    0xdf, 0x0, 0x9, 0xf6, 0xa, 0xf3, 0xdf, 0x0,
    0x4, 0xf8, 0xa, 0xf3, 0xdf, 0x0, 0x4, 0xf9,
    0xa, 0xf3, 0xdf, 0x0, 0x4, 0xf9, 0xa, 0xf3,
    0xdf, 0x0, 0x4, 0xf8, 0xa, 0xf3, 0xdf, 0x0,
    0x9, 0xf6, 0xa, 0xf3, 0xdf, 0xaa, 0xcf, 0xe0,
    0xa, 0xf3, 0xdf, 0xff, 0xea, 0x20, 0xa, 0xf3,

    /* U+042C "Ь" */
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0xff, 0xea, 0x20, 0xdf, 0xaa, 0xcf, 0xe0,
    0xdf, 0x0, 0x9, 0xf6, 0xdf, 0x0, 0x4, 0xf8,
    0xdf, 0x0, 0x4, 0xf9, 0xdf, 0x0, 0x4, 0xf9,
    0xdf, 0x0, 0x4, 0xf8, 0xdf, 0x0, 0x9, 0xf6,
    0xdf, 0xaa, 0xcf, 0xe0, 0xdf, 0xff, 0xea, 0x20,

    /* U+042D "Э" */
    0x1, 0x9d, 0xfd, 0x70, 0x0, 0xcf, 0xdb, 0xef,
    0x90, 0x3f, 0xb0, 0x0, 0xef, 0x5, 0xf7, 0x0,
    0xa, 0xf3, 0x15, 0x20, 0x0, 0xaf, 0x30, 0x0,
    0x0, 0xa, 0xf3, 0x0, 0x8, 0xaa, 0xef, 0x30,
    0x0, 0xcf, 0xff, 0xf3, 0x0, 0x0, 0x0, 0xaf,
    0x30, 0x0, 0x0, 0xa, 0xf3, 0x14, 0x10, 0x0,
    0xaf, 0x35, 0xf6, 0x0, 0xa, 0xf3, 0x4f, 0x70,
    0x0, 0xaf, 0x32, 0xfc, 0x0, 0x1e, 0xf0, 0xa,
    0xfd, 0xbe, 0xf9, 0x0, 0x9, 0xef, 0xd7, 0x0,

    /* U+042E "Ю" */
    0xdf, 0x0, 0x3, 0xbe, 0xfc, 0x40, 0xdf, 0x0,
    0x2f, 0xfc, 0xbf, 0xf4, 0xdf, 0x0, 0x8f, 0x70,
    0x3, 0xfc, 0xdf, 0x0, 0xbf, 0x30, 0x0, 0xee,
    0xdf, 0x0, 0xbf, 0x20, 0x0, 0xef, 0xdf, 0x0,
    0xbf, 0x20, 0x0, 0xef, 0xdf, 0xaa, 0xef, 0x20,
    0x0, 0xef, 0xdf, 0xff, 0xff, 0x20, 0x0, 0xef,
    0xdf, 0x0, 0xbf, 0x20, 0x0, 0xef, 0xdf, 0x0,
    0xbf, 0x20, 0x0, 0xef, 0xdf, 0x0, 0xbf, 0x20,
    0x0, 0xef, 0xdf, 0x0, 0xbf, 0x20, 0x0, 0xef,
    0xdf, 0x0, 0xaf, 0x30, 0x0, 0xee, 0xdf, 0x0,
    0x7f, 0x70, 0x3, 0xfc, 0xdf, 0x0, 0x1e, 0xfc,
    0xbf, 0xf4, 0xdf, 0x0, 0x2, 0xbf, 0xfc, 0x40,

    /* U+042F "Я" */
    0x0, 0x8d, 0xff, 0xff, 0x80, 0x7f, 0xfb, 0xac,
    0xf8, 0xd, 0xf2, 0x0, 0x6f, 0x80, 0xfe, 0x0,
    0x6, 0xf8, 0xf, 0xe0, 0x0, 0x6f, 0x80, 0xdf,
    0x0, 0x6, 0xf8, 0x8, 0xf8, 0x10, 0x6f, 0x80,
    0x9, 0xff, 0xff, 0xf8, 0x3, 0xff, 0xba, 0xcf,
    0x80, 0xbf, 0x30, 0x6, 0xf8, 0xe, 0xe0, 0x0,
    0x6f, 0x80, 0xfe, 0x0, 0x6, 0xf8, 0xf, 0xe0,
    0x0, 0x6f, 0x80, 0xfe, 0x0, 0x6, 0xf8, 0xf,
    0xd0, 0x0, 0x6f, 0x82, 0xfb, 0x0, 0x6, 0xf8,

    /* U+0430 "а" */
    0x0, 0x8d, 0xfd, 0x50, 0x8, 0xfc, 0x8e, 0xf3,
    0xe, 0xd0, 0x3, 0xf8, 0xa, 0x70, 0x1, 0xfa,
    0x0, 0x0, 0x1a, 0xfb, 0x0, 0x18, 0xfe, 0xfb,
    0x3, 0xef, 0x92, 0xfb, 0xe, 0xf3, 0x1, 0xfb,
    0x4f, 0x90, 0x2, 0xfb, 0x5f, 0x80, 0x6, 0xfb,
    0x1f, 0xe6, 0x7e, 0xec, 0x5, 0xdf, 0xc4, 0xce,

    /* U+0431 "б" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x50,
    0x0, 0x3b, 0xff, 0x30, 0x7, 0xff, 0x91, 0x0,
    0x4f, 0xb1, 0x0, 0x0, 0xaf, 0x10, 0x0, 0x0,
    0xdd, 0x5d, 0xfb, 0x20, 0xff, 0xfa, 0xcf, 0xb0,
    0xff, 0x40, 0xe, 0xf0, 0xfe, 0x0, 0xb, 0xf2,
    0xfd, 0x0, 0xb, 0xf2, 0xfd, 0x0, 0xb, 0xf2,
    0xfd, 0x0, 0xb, 0xf2, 0xfd, 0x0, 0xb, 0xf2,
    0xed, 0x0, 0xb, 0xf1, 0xcf, 0x10, 0xe, 0xe0,
    0x5f, 0xe9, 0xdf, 0x70, 0x6, 0xdf, 0xe8, 0x0,

    /* U+0432 "в" */
    0xdf, 0xff, 0xeb, 0x20, 0xdf, 0x88, 0xaf, 0xe0,
    0xdf, 0x0, 0xa, 0xf3, 0xdf, 0x0, 0x8, 0xf4,
    0xdf, 0x0, 0xb, 0xf2, 0xdf, 0x88, 0xbf, 0x80,
    0xdf, 0xff, 0xfe, 0x60, 0xdf, 0x0, 0x2b, 0xf5,
    0xdf, 0x0, 0x4, 0xf8, 0xdf, 0x0, 0x6, 0xf7,
    0xdf, 0x88, 0x9f, 0xf3, 0xdf, 0xff, 0xec, 0x40,

    /* U+0433 "г" */
    0xdf, 0xff, 0xfa, 0xdf, 0x88, 0x85, 0xdf, 0x0,
    0x0, 0xdf, 0x0, 0x0, 0xdf, 0x0, 0x0, 0xdf,
    0x0, 0x0, 0xdf, 0x0, 0x0, 0xdf, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0xdf, 0x0, 0x0, 0xdf, 0x0,
    0x0, 0xdf, 0x0, 0x0,

    /* U+0434 "д" */
    0x0, 0x4f, 0xff, 0xff, 0xf0, 0x0, 0x5, 0xfb,
    0x88, 0xef, 0x0, 0x0, 0x5f, 0x60, 0xd, 0xf0,
    0x0, 0x6, 0xf5, 0x0, 0xdf, 0x0, 0x0, 0x7f,
    0x50, 0xd, 0xf0, 0x0, 0x8, 0xf4, 0x0, 0xdf,
    0x0, 0x0, 0x9f, 0x30, 0xd, 0xf0, 0x0, 0xa,
    0xf2, 0x0, 0xdf, 0x0, 0x0, 0xbf, 0x10, 0xd,
    0xf0, 0x0, 0xd, 0xf0, 0x0, 0xdf, 0x0, 0x49,
    0xfc, 0x88, 0x8e, 0xf8, 0x9, 0xff, 0xff, 0xff,
    0xff, 0xf1, 0x9f, 0x30, 0x0, 0x0, 0xbf, 0x19,
    0xf3, 0x0, 0x0, 0xb, 0xf1, 0x13, 0x0, 0x0,
    0x0, 0x23, 0x0,

    /* U+0435 "е" */
    0x0, 0x7d, 0xfd, 0x70, 0x0, 0x7f, 0xd9, 0xdf,
    0x70, 0xe, 0xe0, 0x0, 0xee, 0x0, 0xfc, 0x0,
    0xb, 0xf0, 0x1f, 0xc2, 0x22, 0xcf, 0x11, 0xff,
    0xff, 0xff, 0xf1, 0x1f, 0xd5, 0x55, 0x55, 0x1,
    0xfb, 0x0, 0x0, 0x0, 0xf, 0xc0, 0x0, 0xae,
    0x0, 0xee, 0x0, 0xe, 0xe0, 0x7, 0xfd, 0x9d,
    0xf7, 0x0, 0x7, 0xdf, 0xd7, 0x0,

    /* U+0436 "ж" */
    0x2f, 0xc0, 0x1, 0xfb, 0x0, 0x3f, 0xb0, 0x8,
    0xf6, 0x1, 0xfb, 0x0, 0xcf, 0x20, 0x0, 0xde,
    0x1, 0xfb, 0x5, 0xf8, 0x0, 0x0, 0x4f, 0x81,
    0xfb, 0xe, 0xd0, 0x0, 0x0, 0xc, 0xf3, 0xfb,
    0x8f, 0x60, 0x0, 0x0, 0x1f, 0xfc, 0xfd, 0xff,
    0xa0, 0x0, 0x0, 0x6f, 0x7f, 0xff, 0xbb, 0xf1,
    0x0, 0x0, 0xde, 0x7, 0xff, 0x15, 0xf6, 0x0,
    0x3, 0xf9, 0x1, 0xfb, 0x0, 0xfd, 0x0, 0x9,
    0xf3, 0x1, 0xfb, 0x0, 0xaf, 0x30, 0xf, 0xd0,
    0x1, 0xfb, 0x0, 0x4f, 0x90, 0x6f, 0x70, 0x1,
    0xfb, 0x0, 0xe, 0xf0,

    /* U+0437 "з" */
    0x1, 0xae, 0xfd, 0x70, 0xc, 0xfb, 0xae, 0xf7,
    0x2f, 0xa0, 0x1, 0xfc, 0x28, 0x30, 0x0, 0xfd,
    0x0, 0x1, 0x28, 0xf7, 0x0, 0xd, 0xff, 0x90,
    0x0, 0x4, 0x6b, 0xf6, 0x0, 0x0, 0x0, 0xfd,
    0x5f, 0x60, 0x0, 0xee, 0x3f, 0x90, 0x2, 0xfc,
    0xc, 0xfb, 0xae, 0xf5, 0x1, 0x9e, 0xfd, 0x50,

    /* U+0438 "и" */
    0xdd, 0x0, 0xc, 0xf5, 0xdd, 0x0, 0x2f, 0xf5,
    0xdd, 0x0, 0x9f, 0xf5, 0xdd, 0x0, 0xfe, 0xf5,
    0xdd, 0x6, 0xf7, 0xf5, 0xdd, 0xd, 0xb5, 0xf5,
    0xdd, 0x4f, 0x55, 0xf5, 0xdd, 0xae, 0x5, 0xf5,
    0xde, 0xf7, 0x5, 0xf5, 0xdf, 0xf1, 0x5, 0xf5,
    0xdf, 0xa0, 0x5, 0xf5, 0xdf, 0x30, 0x5, 0xf5,

    /* U+0439 "й" */
    0xa, 0xa1, 0x3f, 0x20, 0x3, 0xef, 0xf9, 0x0,
    0x0, 0x2, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xdd, 0x0, 0xc, 0xf5, 0xdd, 0x0, 0x2f, 0xf5,
    0xdd, 0x0, 0x9f, 0xf5, 0xdd, 0x0, 0xfe, 0xf5,
    0xdd, 0x6, 0xf7, 0xf5, 0xdd, 0xd, 0xb5, 0xf5,
    0xdd, 0x4f, 0x55, 0xf5, 0xdd, 0xae, 0x5, 0xf5,
    0xde, 0xf7, 0x5, 0xf5, 0xdf, 0xf1, 0x5, 0xf5,
    0xdf, 0xa0, 0x5, 0xf5, 0xdf, 0x30, 0x5, 0xf5,

    /* U+043A "к" */
    0xef, 0x0, 0x9, 0xf5, 0xef, 0x0, 0x4f, 0xa0,
    0xef, 0x0, 0xde, 0x10, 0xef, 0x8, 0xf4, 0x0,
    0xef, 0x3f, 0xb0, 0x0, 0xef, 0xcf, 0xf1, 0x0,
    0xef, 0xfb, 0xf7, 0x0, 0xef, 0x81, 0xfd, 0x0,
    0xef, 0x0, 0xaf, 0x50, 0xef, 0x0, 0x3f, 0xb0,
    0xef, 0x0, 0xc, 0xf2, 0xef, 0x0, 0x5, 0xf9,

    /* U+043B "л" */
    0x0, 0x3f, 0xff, 0xff, 0xf0, 0x0, 0x4f, 0xc9,
    0x9e, 0xf0, 0x0, 0x4f, 0x70, 0xc, 0xf0, 0x0,
    0x5f, 0x60, 0xc, 0xf0, 0x0, 0x6f, 0x60, 0xc,
    0xf0, 0x0, 0x7f, 0x50, 0xc, 0xf0, 0x0, 0x7f,
    0x40, 0xc, 0xf0, 0x0, 0x8f, 0x30, 0xc, 0xf0,
    0x0, 0x9f, 0x30, 0xc, 0xf0, 0x0, 0xbf, 0x10,
    0xc, 0xf0, 0x5a, 0xfd, 0x0, 0xc, 0xf0, 0x8f,
    0xc2, 0x0, 0xc, 0xf0,

    /* U+043C "м" */
    0xdf, 0xe0, 0x0, 0x5, 0xff, 0x7d, 0xff, 0x30,
    0x0, 0x9f, 0xf7, 0xde, 0xf7, 0x0, 0xd, 0xef,
    0x7d, 0xcd, 0xc0, 0x2, 0xf9, 0xf7, 0xdc, 0x9f,
    0x0, 0x7f, 0x5f, 0x7d, 0xc4, 0xf5, 0xb, 0xc4,
    0xf7, 0xdc, 0xf, 0x90, 0xf7, 0x4f, 0x7d, 0xc0,
    0xbe, 0x4f, 0x34, 0xf7, 0xdc, 0x7, 0xfb, 0xe0,
    0x4f, 0x7d, 0xc0, 0x2f, 0xfa, 0x4, 0xf7, 0xdc,
    0x0, 0xef, 0x50, 0x4f, 0x7d, 0xc0, 0x9, 0xf1,
    0x4, 0xf7,

    /* U+043D "н" */
    0xdf, 0x0, 0x8, 0xf4, 0xdf, 0x0, 0x8, 0xf4,
    0xdf, 0x0, 0x8, 0xf4, 0xdf, 0x0, 0x8, 0xf4,
    0xdf, 0x0, 0x8, 0xf4, 0xdf, 0xff, 0xff, 0xf4,
    0xdf, 0x88, 0x8c, 0xf4, 0xdf, 0x0, 0x8, 0xf4,
    0xdf, 0x0, 0x8, 0xf4, 0xdf, 0x0, 0x8, 0xf4,
    0xdf, 0x0, 0x8, 0xf4, 0xdf, 0x0, 0x8, 0xf4,

    /* U+043E "о" */
    0x0, 0x7d, 0xfd, 0x60, 0x0, 0x7f, 0xd9, 0xdf,
    0x60, 0xe, 0xe0, 0x1, 0xfd, 0x0, 0xfb, 0x0,
    0xd, 0xf0, 0x1f, 0xb0, 0x0, 0xdf, 0x1, 0xfb,
    0x0, 0xd, 0xf0, 0x1f, 0xb0, 0x0, 0xdf, 0x1,
    0xfb, 0x0, 0xd, 0xf0, 0xf, 0xb0, 0x0, 0xdf,
    0x0, 0xee, 0x0, 0x1f, 0xd0, 0x7, 0xfd, 0x9d,
    0xf6, 0x0, 0x7, 0xdf, 0xd6, 0x0,

    /* U+043F "п" */
    0xdf, 0xff, 0xff, 0xf3, 0xdf, 0x88, 0x8d, 0xf3,
    0xdf, 0x0, 0xa, 0xf3, 0xdf, 0x0, 0xa, 0xf3,
    0xdf, 0x0, 0xa, 0xf3, 0xdf, 0x0, 0xa, 0xf3,
    0xdf, 0x0, 0xa, 0xf3, 0xdf, 0x0, 0xa, 0xf3,
    0xdf, 0x0, 0xa, 0xf3, 0xdf, 0x0, 0xa, 0xf3,
    0xdf, 0x0, 0xa, 0xf3, 0xdf, 0x0, 0xa, 0xf3,

    /* U+0440 "р" */
    0xdb, 0x4d, 0xfc, 0x30, 0xdd, 0xfa, 0xbf, 0xd0,
    0xdf, 0x60, 0xc, 0xf2, 0xdf, 0x0, 0x9, 0xf3,
    0xdf, 0x0, 0x9, 0xf4, 0xdf, 0x0, 0x9, 0xf4,
    0xdf, 0x0, 0x9, 0xf4, 0xdf, 0x0, 0x9, 0xf4,
    0xdf, 0x0, 0x9, 0xf3, 0xdf, 0x50, 0xc, 0xf2,
    0xdf, 0xea, 0xbf, 0xd0, 0xdf, 0x4d, 0xfc, 0x30,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,

    /* U+0441 "с" */
    0x0, 0x7d, 0xfd, 0x60, 0x8, 0xfd, 0x9d, 0xf5,
    0xe, 0xe0, 0x1, 0xfb, 0xf, 0xc0, 0x0, 0xed,
    0x1f, 0xb0, 0x0, 0x22, 0x1f, 0xb0, 0x0, 0x0,
    0x1f, 0xb0, 0x0, 0x0, 0x1f, 0xb0, 0x0, 0x66,
    0xf, 0xc0, 0x0, 0xed, 0xe, 0xe0, 0x1, 0xfb,
    0x8, 0xfd, 0x9d, 0xf5, 0x0, 0x7d, 0xfd, 0x60,

    /* U+0442 "т" */
    0x9f, 0xff, 0xff, 0xff, 0x48, 0x8d, 0xf8, 0x87,
    0x0, 0xb, 0xf1, 0x0, 0x0, 0xb, 0xf1, 0x0,
    0x0, 0xb, 0xf1, 0x0, 0x0, 0xb, 0xf1, 0x0,
    0x0, 0xb, 0xf1, 0x0, 0x0, 0xb, 0xf1, 0x0,
    0x0, 0xb, 0xf1, 0x0, 0x0, 0xb, 0xf1, 0x0,
    0x0, 0xb, 0xf1, 0x0, 0x0, 0xb, 0xf1, 0x0,

    /* U+0443 "у" */
    0x7f, 0x50, 0x0, 0xbf, 0x3, 0xf9, 0x0, 0xe,
    0xc0, 0xf, 0xd0, 0x2, 0xf8, 0x0, 0xbf, 0x10,
    0x5f, 0x40, 0x7, 0xf4, 0x9, 0xf1, 0x0, 0x3f,
    0x80, 0xcd, 0x0, 0x0, 0xec, 0xf, 0x90, 0x0,
    0xb, 0xf4, 0xf6, 0x0, 0x0, 0x7f, 0xaf, 0x20,
    0x0, 0x2, 0xff, 0xe0, 0x0, 0x0, 0xe, 0xfb,
    0x0, 0x0, 0x0, 0xaf, 0x70, 0x0, 0x0, 0x8,
    0xf4, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x1a,
    0xbf, 0xa0, 0x0, 0x1, 0xef, 0xb1, 0x0, 0x0,

    /* U+0444 "ф" */
    0x0, 0x0, 0xe, 0xe0, 0x0, 0x0, 0x0, 0x0,
    0xe, 0xe0, 0x0, 0x0, 0x0, 0x0, 0xe, 0xe0,
    0x0, 0x0, 0x0, 0x0, 0xe, 0xe0, 0x0, 0x0,
    0x0, 0x6d, 0xff, 0xff, 0xd7, 0x0, 0x7, 0xfd,
    0x8f, 0xf8, 0xdf, 0x70, 0xe, 0xe0, 0xe, 0xe0,
    0xe, 0xe0, 0xf, 0xb0, 0xe, 0xe0, 0xa, 0xf1,
    0x1f, 0xb0, 0xe, 0xe0, 0xa, 0xf2, 0x1f, 0xb0,
    0xe, 0xe0, 0xa, 0xf2, 0x1f, 0xb0, 0xe, 0xe0,
    0xa, 0xf2, 0x1f, 0xb0, 0xe, 0xe0, 0xa, 0xf2,
    0xf, 0xb0, 0xe, 0xe0, 0xa, 0xf1, 0xe, 0xe0,
    0xe, 0xe0, 0xd, 0xe0, 0x7, 0xfd, 0x8f, 0xf8,
    0xcf, 0x70, 0x0, 0x6d, 0xff, 0xff, 0xd7, 0x0,
    0x0, 0x0, 0xe, 0xe0, 0x0, 0x0, 0x0, 0x0,
    0xe, 0xe0, 0x0, 0x0, 0x0, 0x0, 0xe, 0xe0,
    0x0, 0x0, 0x0, 0x0, 0xe, 0xe0, 0x0, 0x0,

    /* U+0445 "х" */
    0x3f, 0xb0, 0x0, 0xcf, 0x10, 0xbf, 0x30, 0x3f,
    0x80, 0x4, 0xfa, 0xa, 0xf1, 0x0, 0xc, 0xf4,
    0xf9, 0x0, 0x0, 0x5f, 0xff, 0x20, 0x0, 0x0,
    0xdf, 0xa0, 0x0, 0x0, 0xf, 0xfc, 0x0, 0x0,
    0x7, 0xfc, 0xf4, 0x0, 0x0, 0xec, 0x2f, 0xc0,
    0x0, 0x6f, 0x50, 0xbf, 0x30, 0xd, 0xd0, 0x4,
    0xfb, 0x5, 0xf6, 0x0, 0xd, 0xf2,

    /* U+0446 "ц" */
    0xdf, 0x0, 0xa, 0xf3, 0xd, 0xf0, 0x0, 0xaf,
    0x30, 0xdf, 0x0, 0xa, 0xf3, 0xd, 0xf0, 0x0,
    0xaf, 0x30, 0xdf, 0x0, 0xa, 0xf3, 0xd, 0xf0,
    0x0, 0xaf, 0x30, 0xdf, 0x0, 0xa, 0xf3, 0xd,
    0xf0, 0x0, 0xaf, 0x30, 0xdf, 0x0, 0xa, 0xf3,
    0xd, 0xf0, 0x0, 0xaf, 0x30, 0xdf, 0x88, 0x8d,
    0xf9, 0x4d, 0xff, 0xff, 0xff, 0xf8, 0x0, 0x0,
    0x0, 0x4f, 0x80, 0x0, 0x0, 0x4, 0xf8, 0x0,
    0x0, 0x0, 0x3, 0x10,

    /* U+0447 "ч" */
    0x4f, 0x80, 0x0, 0xfc, 0x4f, 0x80, 0x0, 0xfc,
    0x4f, 0x80, 0x0, 0xfc, 0x4f, 0x80, 0x1, 0xfc,
    0x3f, 0x90, 0x3, 0xfc, 0x1f, 0xe2, 0x1c, 0xfc,
    0xa, 0xff, 0xfc, 0xfc, 0x0, 0x58, 0x61, 0xfc,
    0x0, 0x0, 0x0, 0xfc, 0x0, 0x0, 0x0, 0xfc,
    0x0, 0x0, 0x0, 0xfc, 0x0, 0x0, 0x0, 0xfc,

    /* U+0448 "ш" */
    0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb, 0xdf, 0x0,
    0xf, 0xd0, 0x1, 0xfb, 0xdf, 0x0, 0xf, 0xd0,
    0x1, 0xfb, 0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb,
    0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb, 0xdf, 0x0,
    0xf, 0xd0, 0x1, 0xfb, 0xdf, 0x0, 0xf, 0xd0,
    0x1, 0xfb, 0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb,
    0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb, 0xdf, 0x0,
    0xf, 0xd0, 0x1, 0xfb, 0xdf, 0x88, 0x8f, 0xe8,
    0x89, 0xfb, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xfb,

    /* U+0449 "щ" */
    0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb, 0x0, 0xdf,
    0x0, 0xf, 0xd0, 0x1, 0xfb, 0x0, 0xdf, 0x0,
    0xf, 0xd0, 0x1, 0xfb, 0x0, 0xdf, 0x0, 0xf,
    0xd0, 0x1, 0xfb, 0x0, 0xdf, 0x0, 0xf, 0xd0,
    0x1, 0xfb, 0x0, 0xdf, 0x0, 0xf, 0xd0, 0x1,
    0xfb, 0x0, 0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb,
    0x0, 0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb, 0x0,
    0xdf, 0x0, 0xf, 0xd0, 0x1, 0xfb, 0x0, 0xdf,
    0x0, 0xf, 0xd0, 0x1, 0xfb, 0x0, 0xdf, 0x88,
    0x8f, 0xe8, 0x89, 0xfd, 0x80, 0xdf, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xc, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2,
    0x30,

    /* U+044A "ъ" */
    0x9f, 0xff, 0x60, 0x0, 0x0, 0x48, 0xbf, 0x60,
    0x0, 0x0, 0x0, 0x7f, 0x60, 0x0, 0x0, 0x0,
    0x7f, 0x60, 0x0, 0x0, 0x0, 0x7f, 0xca, 0x96,
    0x10, 0x0, 0x7f, 0xff, 0xff, 0xe2, 0x0, 0x7f,
    0x60, 0x7, 0xfa, 0x0, 0x7f, 0x60, 0x0, 0xee,
    0x0, 0x7f, 0x60, 0x0, 0xee, 0x0, 0x7f, 0x60,
    0x2, 0xfc, 0x0, 0x7f, 0xc9, 0xae, 0xf5, 0x0,
    0x7f, 0xff, 0xfc, 0x50,

    /* U+044B "ы" */
    0xdf, 0x0, 0x0, 0x0, 0xc, 0xf0, 0xdf, 0x0,
    0x0, 0x0, 0xc, 0xf0, 0xdf, 0x0, 0x0, 0x0,
    0xc, 0xf0, 0xdf, 0x0, 0x0, 0x0, 0xc, 0xf0,
    0xdf, 0xa9, 0x84, 0x0, 0xc, 0xf0, 0xdf, 0xff,
    0xff, 0xa0, 0xc, 0xf0, 0xdf, 0x0, 0x2c, 0xf3,
    0xc, 0xf0, 0xdf, 0x0, 0x5, 0xf7, 0xc, 0xf0,
    0xdf, 0x0, 0x4, 0xf7, 0xc, 0xf0, 0xdf, 0x0,
    0x8, 0xf5, 0xc, 0xf0, 0xdf, 0x99, 0xbf, 0xe0,
    0xc, 0xf0, 0xdf, 0xff, 0xea, 0x20, 0xc, 0xf0,

    /* U+044C "ь" */
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0,
    0xdf, 0xa9, 0x84, 0x0, 0xdf, 0xff, 0xff, 0xa0,
    0xdf, 0x0, 0x2c, 0xf3, 0xdf, 0x0, 0x5, 0xf7,
    0xdf, 0x0, 0x4, 0xf7, 0xdf, 0x0, 0x8, 0xf5,
    0xdf, 0x99, 0xbf, 0xe0, 0xdf, 0xff, 0xea, 0x20,

    /* U+044D "э" */
    0x1, 0xae, 0xfc, 0x40, 0xc, 0xfb, 0x9e, 0xf2,
    0x3f, 0xa0, 0x3, 0xf9, 0x39, 0x40, 0x0, 0xfb,
    0x0, 0x1, 0x22, 0xfc, 0x0, 0xf, 0xff, 0xfc,
    0x0, 0x4, 0x55, 0xfc, 0x0, 0x0, 0x0, 0xfc,
    0x4f, 0x60, 0x0, 0xfb, 0x2f, 0xa0, 0x4, 0xf9,
    0xb, 0xfb, 0x9f, 0xf2, 0x1, 0x9e, 0xfc, 0x40,

    /* U+044E "ю" */
    0xdf, 0x0, 0x3, 0xcf, 0xea, 0x10, 0xdf, 0x0,
    0x2f, 0xfa, 0xbf, 0xc0, 0xdf, 0x0, 0x8f, 0x50,
    0xa, 0xf3, 0xdf, 0x0, 0xaf, 0x20, 0x7, 0xf5,
    0xdf, 0x0, 0xbf, 0x10, 0x6, 0xf6, 0xdf, 0xff,
    0xff, 0x10, 0x6, 0xf6, 0xdf, 0x88, 0xdf, 0x10,
    0x6, 0xf6, 0xdf, 0x0, 0xbf, 0x10, 0x6, 0xf6,
    0xdf, 0x0, 0xaf, 0x20, 0x7, 0xf5, 0xdf, 0x0,
    0x8f, 0x50, 0xa, 0xf3, 0xdf, 0x0, 0x2f, 0xf9,
    0xbf, 0xc0, 0xdf, 0x0, 0x3, 0xcf, 0xea, 0x10,

    /* U+044F "я" */
    0x0, 0x9e, 0xff, 0xff, 0x50, 0x9f, 0xd8, 0x8b,
    0xf5, 0xe, 0xf0, 0x0, 0x7f, 0x50, 0xfd, 0x0,
    0x7, 0xf5, 0xc, 0xf1, 0x0, 0x7f, 0x50, 0x3e,
    0xd9, 0x8b, 0xf5, 0x2, 0xbf, 0xff, 0xff, 0x50,
    0xcf, 0x61, 0x7, 0xf5, 0xf, 0xd0, 0x0, 0x7f,
    0x50, 0xfc, 0x0, 0x7, 0xf5, 0xf, 0xc0, 0x0,
    0x7f, 0x52, 0xfa, 0x0, 0x7, 0xf5,

    /* U+2116 "№" */
    0x9c, 0xa0, 0x1, 0xc7, 0x0, 0x0, 0x0, 0xcf,
    0xf0, 0x2, 0xf9, 0x1, 0xac, 0x91, 0xcf, 0xf4,
    0x2, 0xf9, 0xc, 0xb5, 0xca, 0xcf, 0xf9, 0x2,
    0xf9, 0xf, 0x30, 0x5e, 0xce, 0xcd, 0x2, 0xf9,
    0x1f, 0x30, 0x4f, 0xce, 0x8f, 0x12, 0xf9, 0x1f,
    0x30, 0x4f, 0xce, 0x3f, 0x52, 0xf9, 0x1f, 0x30,
    0x4f, 0xce, 0xf, 0xa2, 0xf9, 0x1f, 0x30, 0x4f,
    0xce, 0xb, 0xe2, 0xf9, 0xe, 0x80, 0x9c, 0xce,
    0x6, 0xf4, 0xf9, 0x4, 0xff, 0xe3, 0xce, 0x2,
    0xf8, 0xf9, 0x0, 0x2, 0x0, 0xce, 0x0, 0xed,
    0xf9, 0x7, 0x77, 0x76, 0xce, 0x0, 0xaf, 0xf9,
    0xb, 0xbb, 0xba, 0xce, 0x0, 0x5f, 0xf9, 0x0,
    0x0, 0x0, 0xce, 0x0, 0x1f, 0xf9, 0x0, 0x0,
    0x0, 0xce, 0x0, 0xd, 0xf9, 0x0, 0x0, 0x0,
    0xce, 0x0, 0x8, 0xf9, 0x0, 0x0, 0x0
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc_24[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 63, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 0, .adv_w = 76, .box_w = 3, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 24, .adv_w = 111, .box_w = 5, .box_h = 5, .ofs_x = 1, .ofs_y = 11},
    {.bitmap_index = 37, .adv_w = 154, .box_w = 10, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 117, .adv_w = 154, .box_w = 8, .box_h = 19, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 193, .adv_w = 218, .box_w = 14, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 305, .adv_w = 101, .box_w = 5, .box_h = 19, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 353, .adv_w = 101, .box_w = 5, .box_h = 19, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 401, .adv_w = 156, .box_w = 10, .box_h = 9, .ofs_x = 0, .ofs_y = 7},
    {.bitmap_index = 446, .adv_w = 154, .box_w = 9, .box_h = 9, .ofs_x = 0, .ofs_y = 3},
    {.bitmap_index = 487, .adv_w = 70, .box_w = 3, .box_h = 6, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 496, .adv_w = 102, .box_w = 6, .box_h = 2, .ofs_x = 0, .ofs_y = 6},
    {.bitmap_index = 502, .adv_w = 70, .box_w = 3, .box_h = 3, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 507, .adv_w = 154, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 579, .adv_w = 106, .box_w = 6, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 627, .adv_w = 142, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 699, .adv_w = 144, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 771, .adv_w = 153, .box_w = 10, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 851, .adv_w = 146, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 923, .adv_w = 151, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 995, .adv_w = 137, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1067, .adv_w = 152, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1139, .adv_w = 151, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1211, .adv_w = 70, .box_w = 3, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1229, .adv_w = 70, .box_w = 3, .box_h = 15, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 1252, .adv_w = 154, .box_w = 9, .box_h = 7, .ofs_x = 0, .ofs_y = 4},
    {.bitmap_index = 1284, .adv_w = 139, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1356, .adv_w = 267, .box_w = 16, .box_h = 18, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 1500, .adv_w = 101, .box_w = 5, .box_h = 19, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 1548, .adv_w = 101, .box_w = 5, .box_h = 19, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 1596, .adv_w = 115, .box_w = 8, .box_h = 2, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 1604, .adv_w = 154, .box_w = 10, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1684, .adv_w = 151, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1748, .adv_w = 154, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1812, .adv_w = 127, .box_w = 7, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1868, .adv_w = 181, .box_w = 11, .box_h = 19, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 1973, .adv_w = 137, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2037, .adv_w = 236, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2157, .adv_w = 144, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2229, .adv_w = 163, .box_w = 9, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2301, .adv_w = 163, .box_w = 9, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2396, .adv_w = 157, .box_w = 9, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2468, .adv_w = 175, .box_w = 10, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2548, .adv_w = 202, .box_w = 11, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2636, .adv_w = 161, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2700, .adv_w = 154, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2772, .adv_w = 161, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2836, .adv_w = 147, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2900, .adv_w = 147, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2972, .adv_w = 138, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3044, .adv_w = 149, .box_w = 10, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3124, .adv_w = 211, .box_w = 13, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3228, .adv_w = 154, .box_w = 10, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3308, .adv_w = 171, .box_w = 10, .box_h = 19, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 3403, .adv_w = 155, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3475, .adv_w = 226, .box_w = 12, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 3571, .adv_w = 237, .box_w = 14, .box_h = 19, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 3704, .adv_w = 169, .box_w = 10, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3784, .adv_w = 214, .box_w = 12, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 3880, .adv_w = 147, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 3944, .adv_w = 147, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 4016, .adv_w = 223, .box_w = 12, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4112, .adv_w = 154, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 4184, .adv_w = 141, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 4232, .adv_w = 145, .box_w = 8, .box_h = 18, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4304, .adv_w = 148, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4352, .adv_w = 113, .box_w = 6, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4388, .adv_w = 168, .box_w = 11, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 4471, .adv_w = 142, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 4525, .adv_w = 218, .box_w = 14, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 4609, .adv_w = 139, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 4657, .adv_w = 152, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4705, .adv_w = 152, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4769, .adv_w = 147, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4817, .adv_w = 163, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 4877, .adv_w = 202, .box_w = 11, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4943, .adv_w = 151, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 4991, .adv_w = 142, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 5045, .adv_w = 149, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 5093, .adv_w = 147, .box_w = 8, .box_h = 16, .ofs_x = 1, .ofs_y = -4},
    {.bitmap_index = 5157, .adv_w = 138, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 5205, .adv_w = 134, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 5253, .adv_w = 136, .box_w = 9, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
    {.bitmap_index = 5325, .adv_w = 192, .box_w = 12, .box_h = 20, .ofs_x = 0, .ofs_y = -4},
    {.bitmap_index = 5445, .adv_w = 141, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 5499, .adv_w = 159, .box_w = 9, .box_h = 15, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 5567, .adv_w = 142, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 5615, .adv_w = 222, .box_w = 12, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 5687, .adv_w = 232, .box_w = 14, .box_h = 15, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 5792, .adv_w = 169, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 5852, .adv_w = 211, .box_w = 12, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 5924, .adv_w = 146, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 5972, .adv_w = 139, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 6020, .adv_w = 214, .box_w = 12, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 6092, .adv_w = 152, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 6146, .adv_w = 253, .box_w = 14, .box_h = 17, .ofs_x = 1, .ofs_y = 0}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint8_t glyph_id_ofs_list_0_24[] = {
    0, 1, 2, 3, 4, 5, 0, 0,
    6, 7, 8, 9, 10, 11, 12, 0,
    13, 14, 15, 16, 17, 18, 19, 20,
    21, 22, 23, 24, 0, 25, 0, 26,
    27
};

static const uint8_t glyph_id_ofs_list_1_24[] = {
    0, 0, 1, 0, 2
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps_24[] =
{
    {
        .range_start = 32, .range_length = 33, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = glyph_id_ofs_list_0_24, .list_length = 33, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL
    },
    {
        .range_start = 91, .range_length = 5, .glyph_id_start = 29,
        .unicode_list = NULL, .glyph_id_ofs_list = glyph_id_ofs_list_1_24, .list_length = 5, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL
    },
    {
        .range_start = 1040, .range_length = 64, .glyph_id_start = 32,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    },
    {
        .range_start = 8470, .range_length = 1, .glyph_id_start = 96,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};

/*-----------------
 *    KERNING
 *----------------*/


/*Pair left and right glyphs for kerning*/
static const uint8_t kern_pair_glyph_ids_24[] =
{
    3, 18,
    3, 21,
    7, 50,
    11, 15,
    11, 18,
    12, 15,
    12, 18,
    12, 21,
    13, 15,
    13, 18,
    21, 3,
    21, 11,
    21, 12,
    21, 13,
    21, 24,
    21, 25,
    24, 21,
    25, 21,
    29, 50,
    32, 27,
    32, 32,
    32, 36,
    32, 43,
    32, 46,
    32, 49,
    32, 50,
    32, 51,
    32, 52,
    32, 55,
    32, 58,
    32, 64,
    32, 82,
    32, 83,
    32, 87,
    32, 90,
    33, 50,
    33, 53,
    33, 58,
    33, 68,
    33, 75,
    33, 82,
    33, 83,
    33, 90,
    34, 32,
    34, 38,
    34, 51,
    34, 53,
    34, 58,
    35, 8,
    35, 11,
    35, 12,
    35, 13,
    35, 30,
    35, 32,
    35, 36,
    35, 38,
    35, 43,
    35, 46,
    35, 49,
    35, 52,
    35, 63,
    35, 64,
    35, 65,
    35, 66,
    35, 67,
    35, 68,
    35, 69,
    35, 70,
    35, 71,
    35, 72,
    35, 73,
    35, 74,
    35, 75,
    35, 76,
    35, 77,
    35, 78,
    35, 79,
    35, 80,
    35, 81,
    35, 82,
    35, 83,
    35, 84,
    35, 85,
    35, 86,
    35, 87,
    35, 88,
    35, 89,
    35, 90,
    35, 91,
    35, 92,
    35, 93,
    35, 94,
    35, 95,
    36, 50,
    36, 55,
    36, 58,
    36, 82,
    36, 90,
    37, 32,
    38, 46,
    38, 49,
    38, 50,
    38, 52,
    38, 82,
    38, 87,
    39, 32,
    39, 38,
    42, 39,
    42, 46,
    42, 49,
    42, 50,
    42, 52,
    42, 61,
    42, 82,
    42, 87,
    46, 32,
    46, 36,
    46, 38,
    46, 43,
    46, 50,
    46, 53,
    46, 58,
    48, 11,
    48, 13,
    48, 32,
    48, 36,
    48, 38,
    48, 43,
    48, 51,
    48, 53,
    48, 63,
    48, 68,
    48, 75,
    48, 82,
    49, 32,
    49, 38,
    49, 46,
    49, 49,
    49, 53,
    50, 8,
    50, 11,
    50, 13,
    50, 30,
    50, 32,
    50, 36,
    50, 43,
    50, 46,
    50, 49,
    50, 50,
    50, 52,
    50, 63,
    50, 64,
    50, 66,
    50, 67,
    50, 68,
    50, 69,
    50, 70,
    50, 71,
    50, 72,
    50, 73,
    50, 74,
    50, 75,
    50, 76,
    50, 77,
    50, 78,
    50, 79,
    50, 80,
    50, 81,
    50, 82,
    50, 83,
    50, 84,
    50, 85,
    50, 86,
    50, 87,
    50, 88,
    50, 89,
    50, 90,
    50, 91,
    50, 92,
    50, 93,
    50, 94,
    50, 95,
    51, 11,
    51, 13,
    51, 32,
    51, 36,
    51, 39,
    51, 43,
    51, 46,
    51, 49,
    51, 52,
    51, 61,
    51, 64,
    51, 65,
    51, 66,
    51, 67,
    51, 68,
    51, 69,
    51, 70,
    51, 71,
    51, 72,
    51, 73,
    51, 74,
    51, 75,
    51, 76,
    51, 77,
    51, 78,
    51, 79,
    51, 80,
    51, 81,
    51, 82,
    51, 84,
    51, 85,
    51, 86,
    51, 87,
    51, 88,
    51, 89,
    51, 91,
    51, 92,
    51, 93,
    51, 94,
    52, 11,
    52, 13,
    52, 32,
    52, 36,
    52, 38,
    52, 43,
    52, 50,
    52, 53,
    53, 46,
    53, 49,
    53, 52,
    53, 69,
    53, 78,
    53, 81,
    53, 82,
    53, 83,
    53, 84,
    53, 87,
    53, 90,
    54, 50,
    54, 55,
    54, 58,
    54, 82,
    54, 90,
    57, 50,
    57, 55,
    57, 58,
    57, 82,
    57, 90,
    58, 27,
    58, 36,
    58, 38,
    58, 43,
    58, 50,
    58, 51,
    58, 53,
    58, 55,
    58, 58,
    58, 82,
    58, 90,
    60, 27,
    60, 36,
    60, 38,
    60, 43,
    60, 50,
    60, 51,
    60, 53,
    60, 55,
    60, 58,
    60, 82,
    60, 90,
    61, 32,
    61, 36,
    61, 38,
    61, 43,
    61, 50,
    61, 53,
    61, 58,
    62, 32,
    62, 36,
    62, 38,
    62, 43,
    62, 50,
    62, 53,
    62, 58,
    64, 82,
    64, 83,
    64, 90,
    65, 68,
    65, 70,
    65, 75,
    65, 83,
    65, 85,
    66, 68,
    66, 70,
    66, 75,
    66, 83,
    66, 85,
    67, 11,
    67, 12,
    67, 13,
    67, 64,
    67, 68,
    67, 69,
    67, 75,
    67, 78,
    67, 81,
    67, 84,
    68, 82,
    68, 87,
    68, 90,
    69, 68,
    69, 70,
    69, 75,
    69, 83,
    69, 85,
    70, 69,
    70, 71,
    70, 78,
    70, 81,
    70, 84,
    70, 93,
    71, 68,
    71, 70,
    71, 75,
    71, 83,
    71, 85,
    74, 64,
    74, 69,
    74, 71,
    74, 78,
    74, 81,
    74, 83,
    74, 84,
    74, 93,
    78, 68,
    78, 70,
    78, 75,
    78, 83,
    78, 85,
    80, 68,
    80, 70,
    80, 75,
    80, 83,
    80, 85,
    81, 70,
    81, 85,
    82, 11,
    82, 13,
    82, 64,
    82, 68,
    82, 75,
    82, 95,
    83, 11,
    83, 13,
    83, 64,
    83, 68,
    83, 69,
    83, 71,
    83, 75,
    83, 78,
    83, 81,
    83, 84,
    83, 93,
    84, 68,
    84, 70,
    84, 75,
    84, 83,
    84, 85,
    85, 69,
    85, 71,
    85, 78,
    85, 81,
    85, 84,
    85, 93,
    86, 82,
    86, 87,
    86, 90,
    89, 82,
    89, 87,
    89, 90,
    90, 27,
    90, 70,
    90, 82,
    90, 83,
    90, 85,
    90, 87,
    90, 90,
    92, 27,
    92, 70,
    92, 82,
    92, 83,
    92, 85,
    92, 87,
    92, 90,
    93, 68,
    93, 70,
    93, 75,
    93, 83,
    93, 85,
    94, 68,
    94, 70,
    94, 75,
    94, 83,
    94, 85
};

/* Kerning between the respective left and right glyphs
 * 4.4 format which needs to scaled with `kern_scale`*/
static const int8_t kern_pair_values_24[] =
{
    -31, 8, 6, -31, -3, -8, 4, -15,
    -31, -3, 8, -33, -17, -33, -4, -4,
    -8, -8, 6, -12, 2, 1, 1, -1,
    -1, -21, -2, -3, -14, -17, 1, -8,
    -5, -4, -6, -6, -2, -4, -2, -2,
    -3, -2, -3, -1, -1, -1, -3, 0,
    6, -30, -28, -30, 6, -21, -27, 0,
    -27, -2, -2, -13, -2, -23, -4, -18,
    -18, -25, -21, -23, -21, -18, -18, -18,
    -25, -18, -18, -21, -18, -18, -21, -17,
    -18, -21, -23, -18, -23, -18, -18, -17,
    -18, -18, -21, -18, -20, -4, -4, -4,
    -1, -1, 2, -3, -3, 0, -8, -4,
    -8, -3, -1, -1, -5, -5, 0, -12,
    -1, -4, -8, -1, -1, -3, -1, -2,
    -5, -2, -30, -30, -15, -23, -9, -23,
    -4, -6, -2, -8, -8, 4, 0, -1,
    1, 1, -3, 6, -30, -30, 6, -21,
    -24, -24, -2, -2, 3, -9, -2, -23,
    -18, -18, -24, -21, -17, -17, -18, -18,
    -18, -24, -18, -18, -21, -18, -18, -21,
    -17, -18, -21, -23, -18, -17, -18, -18,
    -17, -18, -18, -17, -18, -20, -30, -30,
    -18, -21, -2, -21, -5, -5, -8, -2,
    -13, -8, -5, -5, -18, -10, -8, -10,
    -5, -5, -5, -18, -5, -5, -10, -5,
    -5, -10, -4, -10, -5, -5, -4, -5,
    -5, -5, -5, -10, -5, -8, -8, -3,
    -8, -8, -8, -9, -8, -5, -5, -8,
    -2, -2, -2, -4, -10, -2, -8, -8,
    -4, -4, -4, -1, -1, -4, -4, -4,
    -1, -1, -12, 0, -2, 0, -27, -2,
    -2, -2, -17, -1, -1, -12, 0, -2,
    0, -27, -2, -2, -2, -17, -1, -1,
    -1, -1, -3, -1, -2, -5, -2, -1,
    -1, -3, -1, -2, -5, -2, 0, -1,
    0, -2, -2, -2, -2, -4, -2, -2,
    -2, -3, -2, -30, -6, -30, -3, -17,
    -1, -17, -1, -1, -1, -3, -4, -4,
    -2, -2, -2, -2, -4, -3, 0, -3,
    -3, -3, 0, -2, -2, -2, -3, -2,
    0, -4, -1, -4, -4, -1, -4, -1,
    -2, -2, -2, -2, -4, -2, -2, -2,
    -2, -4, -2, -3, -30, -30, -2, -18,
    -18, -2, -21, -21, -5, -12, -2, -2,
    -12, -2, -2, -2, -2, -2, -2, -2,
    -2, -4, -4, -1, -4, -4, -4, -1,
    -3, -4, -4, -3, -4, -4, -15, -3,
    -26, -13, -3, -6, -18, -15, -3, -26,
    -13, -3, -6, -18, -2, -2, -2, -2,
    -4, -2, -2, -2, -2, -4
};

/*Collect the kern pair's data in one place*/
static const lv_font_fmt_txt_kern_pair_t kern_pairs_24 =
{
    .glyph_ids = kern_pair_glyph_ids_24,
    .values = kern_pair_values_24,
    .pair_cnt = 406,
    .glyph_ids_size = 0
};

/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LVGL_VERSION_MAJOR == 8
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t cache;
#endif

#if LVGL_VERSION_MAJOR >= 8
static const lv_font_fmt_txt_dsc_t font_dsc_24 = {
#else
static lv_font_fmt_txt_dsc_t font_dsc = {
#endif
    .glyph_bitmap = glyph_bitmap_24,
    .glyph_dsc = glyph_dsc_24,
    .cmaps = cmaps_24,
    .kern_dsc = &kern_pairs_24,
    .kern_scale = 16,
    .cmap_num = 4,
    .bpp = 4,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LVGL_VERSION_MAJOR == 8
    .cache = &cache
#endif
};



/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LVGL_VERSION_MAJOR >= 8
const lv_font_t lv_font_bebas_24 = {
#else
lv_font_t lv_font_bebas_24 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 25,          /*The maximum line height required by the font*/
    .base_line = 4,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = -4,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc_24,          /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
#if LV_VERSION_CHECK(8, 2, 0) || LVGL_VERSION_MAJOR >= 9
    .fallback = NULL,
#endif
    .user_data = NULL,
};



#endif /*#if LV_FONT_BEBAS_24*/

